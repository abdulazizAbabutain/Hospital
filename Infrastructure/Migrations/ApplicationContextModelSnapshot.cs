// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Common.EntityStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameArabic")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameEnglish")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EntityStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameArabic = "فعال",
                            NameEnglish = "Active"
                        },
                        new
                        {
                            Id = 2,
                            NameArabic = "معطل",
                            NameEnglish = "Deactivate"
                        },
                        new
                        {
                            Id = 3,
                            NameArabic = "محذوف",
                            NameEnglish = "Deleted"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeactivatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("DeleteDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("LastActivateeDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastDeactivateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("LastModifyDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Domain.Entities.EmployeePosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeactivatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("DeleteDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("LastActivateeDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LastDeactivateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("LastModifyDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("EmployeePosition");
                });

            modelBuilder.Entity("Domain.Entities.Department", b =>
                {
                    b.HasOne("Domain.Common.EntityStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Domain.Entities.ShortName", "Name", b1 =>
                        {
                            b1.Property<int>("DepartmentId")
                                .HasColumnType("int");

                            b1.Property<string>("DescriptionArabic")
                                .HasMaxLength(1500)
                                .HasColumnType("nvarchar(1500)")
                                .HasColumnName("DescriptionArabic");

                            b1.Property<string>("DescriptionEnglish")
                                .HasMaxLength(1500)
                                .HasColumnType("nvarchar(1500)")
                                .HasColumnName("DescriptionEnglish");

                            b1.Property<string>("NameArabic")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("NameArabic");

                            b1.Property<string>("NameEnglish")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("NameEnglish");

                            b1.HasKey("DepartmentId");

                            b1.ToTable("Department");

                            b1.WithOwner()
                                .HasForeignKey("DepartmentId");
                        });

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Domain.Entities.EmployeePosition", b =>
                {
                    b.HasOne("Domain.Common.EntityStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Domain.Entities.ShortName", "Name", b1 =>
                        {
                            b1.Property<int>("EmployeePositionId")
                                .HasColumnType("int");

                            b1.Property<string>("DescriptionArabic")
                                .HasMaxLength(1500)
                                .HasColumnType("nvarchar(1500)")
                                .HasColumnName("DescriptionArabic");

                            b1.Property<string>("DescriptionEnglish")
                                .HasMaxLength(1500)
                                .HasColumnType("nvarchar(1500)")
                                .HasColumnName("DescriptionEnglish");

                            b1.Property<string>("NameArabic")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("NameArabic");

                            b1.Property<string>("NameEnglish")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("NameEnglish");

                            b1.HasKey("EmployeePositionId");

                            b1.ToTable("EmployeePosition");

                            b1.WithOwner()
                                .HasForeignKey("EmployeePositionId");
                        });

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
